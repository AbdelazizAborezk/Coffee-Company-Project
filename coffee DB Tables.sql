-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


-- The DROP statements have been added to ensure that no errors occur if the script is mistakenly run more than once
DROP TABLE IF EXISTS staff
DROP TABLE IF EXISTS sales_outlet 
DROP TABLE IF EXISTS customer 
DROP TABLE IF EXISTS sales_detail 
DROP TABLE IF EXISTS product 
DROP TABLE IF EXISTS product_type 
DROP TABLE IF EXISTS sales_transaction 
--

CREATE TABLE staff
(
    staff_id integer,
    first_name character varying(50),
    last_name character varying(50),
    "position" character varying(50),
    start_date date,
    location character varying(5),
    PRIMARY KEY (staff_id)
);

CREATE TABLE sales_outlet
(
    sales_outlet_id integer,
    sales_outlet_type character varying(20),
    address character varying(50),
    city character varying(40),
    telephone character varying(15),
    postal_code integer,
    manager integer,
    PRIMARY KEY (sales_outlet_id)
);

CREATE TABLE customer
(
    customer_id integer,
    customer_name character varying(50),
    email character varying(50),
    reg_date date,
    card_number character varying(15),
    date_of_birth date,
    gender character(1),
    PRIMARY KEY (customer_id)
);

CREATE TABLE sales_detail
(
    sales_detail_id integer,
    transaction_id integer,
    product_id integer,
    quantity integer,
    price double precision,
    PRIMARY KEY (sales_detail_id)
);


CREATE TABLE product
(
    product_id integer,
    product_name character varying(100),
    description character varying(250),
    product_price double precision,
    product_type_id integer,
    PRIMARY KEY (product_id)
);

CREATE TABLE product_type
(
    product_type_id integer,
    product_type character varying(50),
    product_category character varying(50),
    PRIMARY KEY (product_type_id)
);

CREATE TABLE sales_transaction
(
    transaction_id integer,
    transaction_date date,
    transaction_time time ,
    sales_outlet_id integer,
    staff_id integer,
    customer_id integer,
    PRIMARY KEY (transaction_id)
);

ALTER TABLE sales_transaction
    ADD FOREIGN KEY (staff_id)
    REFERENCES staff (staff_id)
    ;


ALTER TABLE sales_transaction
    ADD FOREIGN KEY (sales_outlet_id)
    REFERENCES sales_outlet (sales_outlet_id)
    ;


ALTER TABLE sales_transaction
    ADD FOREIGN KEY (customer_id)
    REFERENCES customer (customer_id)
    ;


ALTER TABLE sales_detail
    ADD FOREIGN KEY (transaction_id)
    REFERENCES sales_transaction (transaction_id)
    ;


ALTER TABLE sales_detail
    ADD FOREIGN KEY (product_id)
    REFERENCES product (product_id)
    ;


ALTER TABLE product
    ADD FOREIGN KEY (product_type_id)
    REFERENCES product_type (product_type_id);